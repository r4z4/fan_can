digraph {
  graph [ranksep=0.3]
  node [shape=box,width=7,fontname=Monospace]
  "init" [label="Initial"];
  subgraph interleaving_1 {
    "{1,1}" [label="   1: <P>: [] = erlang:process_info(<P>, registered_name)\l"];
    "init" -> "{1,1}" [weight=1000];
    "{1,2}" [label="   2: <P>: <P.1> = erlang:spawn_opt(proc_lib, init_p, [...], [...])\l"];
    "{1,1}" -> "{1,2}" [weight=1000];
    "{1,3}" [label="   3: <P.1>: {...} = <P> ! {...}\l"];
    "{1,2}" -> "{1,3}" [weight=1000];
    "{1,4}" [label="   4: <P>: receives message ({...})\l"];
    "{1,3}" -> "{1,4}" [weight=1000];
    "{1,5}" [label="   5: <P>: {...} = erlang:send(<P.1>, {...})\l"];
    "{1,4}" -> "{1,5}" [weight=1000];
    "{1,6}" [label="   6: <P>: {...} = erlang:send(<P.1>, {...})\l"];
    "{1,5}" -> "{1,6}" [weight=1000];
    "{1,7}" [label="   7: <P>: {...} = erlang:send(<P.1>, {...})\l"];
    "{1,6}" -> "{1,7}" [weight=1000];
    "{1,8}" [label="   8: <P>: {...} = erlang:send(<P.1>, {...})\l"];
    "{1,7}" -> "{1,8}" [weight=1000];
    "{1,9}" [label="   9: <P>: {...} = erlang:send(<P.1>, {...})\l"];
    "{1,8}" -> "{1,9}" [weight=1000];
    "{1,10}" [label="  10: <P>: {...} = erlang:send(<P.1>, {...})\l"];
    "{1,9}" -> "{1,10}" [weight=1000];
    "{1,11}" [label="  11: <P>: {...} = erlang:send(<P.1>, {...})\l"];
    "{1,10}" -> "{1,11}" [weight=1000];
    "{1,12}" [label="  12: <P>: #Ref<0.1422193067.282329089.30855> = erlang:monitor(process, <P.1>)\l"];
    "{1,11}" -> "{1,12}" [weight=1000];
    "{1,13}" [label="  13: <P>: -576460748427 = erlang:monotonic_time(millisecond)\l"];
    "{1,12}" -> "{1,13}" [weight=1000];
    "{1,14}" [label="  14: <P>: #Ref<0.1422193067.282329089.30915> = erlang:monitor(process, <P.1>)\l"];
    "{1,13}" -> "{1,14}" [weight=1000];
    "{1,15}" [label="  15: <P>: {...} = <P.1> ! {...}\l"];
    "{1,14}" -> "{1,15}" [weight=1000];
    "{1,16}" [label="  16: <P.1>: receives message ({...})\l"];
    "{1,15}" -> "{1,16}" [weight=1000];
    "{1,17}" [label="  17: <P.1>: #Ref<0.1422193067.282329089.31013> = erlang:make_ref()\l"];
    "{1,16}" -> "{1,17}" [weight=1000];
    "{1,18}" [label="  18: <P.1>: <P.user/user> = erlang:group_leader()\l"];
    "{1,17}" -> "{1,18}" [weight=1000];
    "{1,19}" [label="  19: <P.1>: #Ref<0.1422193067.282329089.31018> = erlang:monitor(process, <P.user/user>)\l"];
    "{1,18}" -> "{1,19}" [weight=1000];
    "{1,20}" [label="  20: <P.1>: {...} = <P.user/user> ! {...}\l"];
    "{1,19}" -> "{1,20}" [weight=1000];
    "{1,21}" [label="  21: <P.1>: receives message ({...})\l"];
    "{1,20}" -> "{1,21}" [weight=1000];
    "{1,22}" [label="  22: <P.1>: true = erlang:demonitor(#Ref<0.1422193067.282329089.31018>, [...])\l"];
    "{1,21}" -> "{1,22}" [weight=1000];
    "{1,23}" [label="  23: <P.1>: {...} = erlang:process_info(<P.1>, current_stacktrace)\l"];
    "{1,22}" -> "{1,23}" [weight=1000];
    "{1,24}" [label="  24: <P.1>: undefined = persistent_term:get({...}, undefined)\l"];
    "{1,23}" -> "{1,24}" [weight=1000];
    "{1,25}" [label="  25: <P.1>: 5 = persistent_term:get({...}, 5)\l"];
    "{1,24}" -> "{1,25}" [weight=1000];
    "{1,26}" [label="  26: <P.1>: true = persistent_term:put({...}, 5)\l"];
    "{1,25}" -> "{1,26}" [weight=1000];
    "{1,27}" [label="  27: <P.1>: #Ref<0.1422193067.282460161.29697> = ets:whereis(logger)\l"];
    "{1,26}" -> "{1,27}" [weight=1000];
    "{1,28}" [label="  28: <P.1>: [...] = ets:lookup(#Ref<0.1422193067.282460161.29697>, '$primary_config$')\l"];
    "{1,27}" -> "{1,28}" [weight=1000];
    "{1,29}" [label="  29: <P.1>: <P.user/user> = erlang:group_leader()\l"];
    "{1,28}" -> "{1,29}" [weight=1000];
    "{1,30}" [label="  30: <P.1>: 1689184248239025 = os:system_time(microsecond)\l"];
    "{1,29}" -> "{1,30}" [weight=1000];
    "{1,31}" [label="  31: <P.1>: undefined = persistent_term:get({...}, undefined)\l"];
    "{1,30}" -> "{1,31}" [weight=1000];
    "{1,32}" [label="  32: <P.1>: undefined = persistent_term:get({...}, undefined)\l"];
    "{1,31}" -> "{1,32}" [weight=1000];
    "{1,33}" [label="  33: <P.1>: 5 = persistent_term:get({...}, 5)\l"];
    "{1,32}" -> "{1,33}" [weight=1000];
    "{1,34}" [label="  34: <P.1>: true = persistent_term:put({...}, 5)\l"];
    "{1,33}" -> "{1,34}" [weight=1000];
    "{1,35}" [label="  35: <P.1>: [] = erlang:process_info(<P.1>, registered_name)\l"];
    "{1,34}" -> "{1,35}" [weight=1000];
    "{1,36}" [label="  36: <P.1>: {...} = erlang:process_info(<P.1>, dictionary)\l"];
    "{1,35}" -> "{1,36}" [weight=1000];
    "{1,37}" [label="  37: <P.1>: {...} = erlang:process_info(<P.1>, message_queue_len)\l"];
    "{1,36}" -> "{1,37}" [weight=1000];
    "{1,38}" [label="  38: <P.1>: [] = ets:lookup(ac_tab, {...})\l"];
    "{1,37}" -> "{1,38}" [weight=1000];
    "{1,39}" [label="  39: <P.1>: {...} = erlang:process_info(<P.1>, messages)\l"];
    "{1,38}" -> "{1,39}" [weight=1000];
    "{1,40}" [label="  40: <P.1>: [] = ets:lookup(ac_tab, {...})\l"];
    "{1,39}" -> "{1,40}" [weight=1000];
    "{1,41}" [label="  41: <P.1>: {...} = erlang:process_info(<P.1>, links)\l"];
    "{1,40}" -> "{1,41}" [weight=1000];
    "{1,42}" [label="  42: <P.1>: {...} = erlang:process_info(<P.1>, dictionary)\l"];
    "{1,41}" -> "{1,42}" [weight=1000];
    "{1,43}" [label="  43: <P.1>: [] = ets:lookup(ac_tab, {...})\l"];
    "{1,42}" -> "{1,43}" [weight=1000];
    "{1,44}" [label="  44: <P.1>: {...} = erlang:process_info(<P.1>, trap_exit)\l"];
    "{1,43}" -> "{1,44}" [weight=1000];
    "{1,45}" [label="  45: <P.1>: {...} = erlang:process_info(<P.1>, status)\l"];
    "{1,44}" -> "{1,45}" [weight=1000];
    "{1,46}" [label="  46: <P.1>: {...} = erlang:process_info(<P.1>, heap_size)\l"];
    "{1,45}" -> "{1,46}" [weight=1000];
    "{1,47}" [label="  47: <P.1>: {...} = erlang:process_info(<P.1>, stack_size)\l"];
    "{1,46}" -> "{1,47}" [weight=1000];
    "{1,48}" [label="  48: <P.1>: {...} = erlang:process_info(<P.1>, reductions)\l"];
    "{1,47}" -> "{1,48}" [weight=1000];
    "{1,49}" [label="  49: <P.1>: {...} = erlang:process_info(<P.1>, links)\l"];
    "{1,48}" -> "{1,49}" [weight=1000];
    "{1,50}" [label="  50: <P.1>: {...} = erlang:process_info(<P>, trap_exit)\l"];
    "{1,49}" -> "{1,50}" [weight=1000];
    "{1,51}" [label="  51: <P.1>: {...} = erlang:process_info(<P>, links)\l"];
    "{1,50}" -> "{1,51}" [weight=1000];
    "{1,52}" [label="  52: <P.1>: {...} = erlang:process_info(<P.1>, trap_exit)\l"];
    "{1,51}" -> "{1,52}" [weight=1000];
    "{1,53}" [label="  53: <P.1>: [] = erlang:process_info(<P>, registered_name)\l"];
    "{1,52}" -> "{1,53}" [weight=1000];
    "{1,54}" [label="  54: <P.1>: {...} = erlang:process_info(<P>, dictionary)\l"];
    "{1,53}" -> "{1,54}" [weight=1000];
    "{1,55}" [label="  55: <P.1>: {...} = erlang:process_info(<P>, initial_call)\l"];
    "{1,54}" -> "{1,55}" [weight=1000];
    "{1,56}" [label="  56: <P.1>: {...} = erlang:process_info(<P>, current_function)\l"];
    "{1,55}" -> "{1,56}" [weight=1000];
    "{1,57}" [label="  57: <P.1>: {...} = erlang:process_info(<P>, dictionary)\l"];
    "{1,56}" -> "{1,57}" [weight=1000];
    "{1,58}" [label="  58: <P.1>: {...} = erlang:process_info(<P>, message_queue_len)\l"];
    "{1,57}" -> "{1,58}" [weight=1000];
    "{1,59}" [label="  59: <P.1>: {...} = erlang:process_info(<P>, links)\l"];
    "{1,58}" -> "{1,59}" [weight=1000];
    "{1,60}" [label="  60: <P.1>: {...} = erlang:process_info(<P>, trap_exit)\l"];
    "{1,59}" -> "{1,60}" [weight=1000];
    "{1,61}" [label="  61: <P.1>: {...} = erlang:process_info(<P>, status)\l"];
    "{1,60}" -> "{1,61}" [weight=1000];
    "{1,62}" [label="  62: <P.1>: {...} = erlang:process_info(<P>, heap_size)\l"];
    "{1,61}" -> "{1,62}" [weight=1000];
    "{1,63}" [label="  63: <P.1>: {...} = erlang:process_info(<P>, stack_size)\l"];
    "{1,62}" -> "{1,63}" [weight=1000];
    "{1,64}" [label="  64: <P.1>: {...} = erlang:process_info(<P>, reductions)\l"];
    "{1,63}" -> "{1,64}" [weight=1000];
    "{1,65}" [label="  65: <P.1>: {...} = erlang:process_info(<P>, current_stacktrace)\l"];
    "{1,64}" -> "{1,65}" [weight=1000];
    "{1,66}" [label="  66: <P.1>: #Ref<0.1422193067.282460161.29697> = ets:whereis(logger)\l"];
    "{1,65}" -> "{1,66}" [weight=1000];
    "{1,67}" [label="  67: <P.1>: [...] = ets:lookup(#Ref<0.1422193067.282460161.29697>, '$primary_config$')\l"];
    "{1,66}" -> "{1,67}" [weight=1000];
    "{1,68}" [label="  68: <P.1>: <P.user/user> = erlang:group_leader()\l"];
    "{1,67}" -> "{1,68}" [weight=1000];
    "{1,69}" [label="  69: <P.1>: 1689184249172578 = os:system_time(microsecond)\l"];
    "{1,68}" -> "{1,69}" [weight=1000];
    "{1,70}" [label="  70: <P.1>: undefined = persistent_term:get({...}, undefined)\l"];
    "{1,69}" -> "{1,70}" [weight=1000];
    "{1,71}" [label="  71: <P.1>: exits abnormally ({...})\l",color=red,penwidth=5];
    "{1,70}" -> "{1,71}" [weight=1000];
    "{1,72}" [label="  72: <P.1>: true = erlang:exit(<P>, {...})\l"];
    "{1,71}" -> "{1,72}" [weight=1000];
    "{1,73}" [label="  73: <P.1>: {...} = erlang:send(<P>, {...})\l"];
    "{1,72}" -> "{1,73}" [weight=1000];
    "{1,74}" [label="  74: <P.1>: {...} = erlang:send(<P>, {...})\l"];
    "{1,73}" -> "{1,74}" [weight=1000];
    "{1,75}" [label="  75: <P>: exits abnormally ({...})\l",color=red,penwidth=5];
    "{1,74}" -> "{1,75}" [weight=1000];
    "{1,76}" [label="  76: <P>: true = erlang:exit(<P.1>, {...})\l"];
    "{1,75}" -> "{1,76}" [weight=1000];
    "{1,final}" [label="1: Error",style=filled,fillcolor=red];
    "{1,76}" -> "{1,final}" [weight=1000];
  }
  subgraph interleaving_2 {
    "{2,15}" [label="  15: <P.1>: receives message ({...})\l"];
    "{1,14}" -> "{2,15}" [style=invis,weight=1];
    "{1,15}" -> "{2,15}" [constraint=false];
    "{2,16}" [label="  16: <P.1>: #Ref<0.1422193067.282329089.31013> = erlang:make_ref()\l"];
    "{2,15}" -> "{2,16}" [weight=1000];
    "{2,17}" [label="  17: <P.1>: <P.user/user> = erlang:group_leader()\l"];
    "{2,16}" -> "{2,17}" [weight=1000];
    "{2,18}" [label="  18: <P.1>: #Ref<0.1422193067.282329089.31018> = erlang:monitor(process, <P.user/user>)\l"];
    "{2,17}" -> "{2,18}" [weight=1000];
    "{2,19}" [label="  19: <P.1>: {...} = <P.user/user> ! {...}\l"];
    "{2,18}" -> "{2,19}" [weight=1000];
    "{2,20}" [label="  20: <P.1>: receives message ({...})\l"];
    "{2,19}" -> "{2,20}" [weight=1000];
    "{2,21}" [label="  21: <P.1>: true = erlang:demonitor(#Ref<0.1422193067.282329089.31018>, [...])\l"];
    "{2,20}" -> "{2,21}" [weight=1000];
    "{2,22}" [label="  22: <P.1>: {...} = erlang:process_info(<P.1>, current_stacktrace)\l"];
    "{2,21}" -> "{2,22}" [weight=1000];
    "{2,23}" [label="  23: <P.1>: undefined = persistent_term:get({...}, undefined)\l"];
    "{2,22}" -> "{2,23}" [weight=1000];
    "{2,24}" [label="  24: <P.1>: 5 = persistent_term:get({...}, 5)\l"];
    "{2,23}" -> "{2,24}" [weight=1000];
    "{2,25}" [label="  25: <P.1>: true = persistent_term:put({...}, 5)\l"];
    "{2,24}" -> "{2,25}" [weight=1000];
    "{2,26}" [label="  26: <P.1>: #Ref<0.1422193067.282460161.29697> = ets:whereis(logger)\l"];
    "{2,25}" -> "{2,26}" [weight=1000];
    "{2,27}" [label="  27: <P.1>: [...] = ets:lookup(#Ref<0.1422193067.282460161.29697>, '$primary_config$')\l"];
    "{2,26}" -> "{2,27}" [weight=1000];
    "{2,28}" [label="  28: <P.1>: <P.user/user> = erlang:group_leader()\l"];
    "{2,27}" -> "{2,28}" [weight=1000];
    "{2,29}" [label="  29: <P.1>: 1689184248239025 = os:system_time(microsecond)\l"];
    "{2,28}" -> "{2,29}" [weight=1000];
    "{2,30}" [label="  30: <P.1>: undefined = persistent_term:get({...}, undefined)\l"];
    "{2,29}" -> "{2,30}" [weight=1000];
    "{2,31}" [label="  31: <P.1>: undefined = persistent_term:get({...}, undefined)\l"];
    "{2,30}" -> "{2,31}" [weight=1000];
    "{2,32}" [label="  32: <P.1>: 5 = persistent_term:get({...}, 5)\l"];
    "{2,31}" -> "{2,32}" [weight=1000];
    "{2,33}" [label="  33: <P.1>: true = persistent_term:put({...}, 5)\l"];
    "{2,32}" -> "{2,33}" [weight=1000];
    "{2,34}" [label="  34: <P.1>: [] = erlang:process_info(<P.1>, registered_name)\l"];
    "{2,33}" -> "{2,34}" [weight=1000];
    "{2,final}" [label="2: Error (Concuerror crashed)",style=filled,fillcolor=red];
    "{2,34}" -> "{2,final}" [weight=1000];
  }
}
